설정값 및 권한제어 명령어 복기
r(4), w(2), x(1)
# chmod 644 [파일명] : 파일명의 권한을 소유자4+2(rw-), 그룹을 4(r--), 기타사용자를 4(r--)로 설정
# chown 소유자.그룹명 [파일명] : 파일명의 소유자와 그룹명의 그룹으로 한번에 변경
# seuid : 일반 사용자가 잠시 root의 권한을 빌려와 비밀번호를 일반 사용자가 수정할 수 있게 하는 명령어 (s로 표시된다 rwsxr--r--) 4744
# setgid : 일반 사용자가 잠시 그룹의 권한을 이용하여 명령을 실행하는 것, 기본적으로 x자리에 s로 온다. (rwxrwsr--)2774
# stickybit : 디렉토리에 적용되며, 일반 사용자들의 공유폴더를 지정할 때 쓰는 명령어 기타 사용자 자리 끝에 t로 표시된다.(r--r--r-xt) 1445

압축과 압축해제
# gzip # bzip2 # xz # zip 의 압축 프로그램이 있으며 각각
# gzip -d 
# bzip2 -d 
# xz -d 
# unzip
으로 압축을 해제할 수 있다.

파일 묶기 : 여러개의 파일을 하나로 묶는 것 (압축의 기능은 하지 않고, 묶어주는 역할만 수행)
# tar -cf [묶음파일명] [파일명] [파일명] 
tar --help
 -c : 새로운 묶음 (create)
 -x : 묶음 해제 (extract)
 -f : 묶음 파일 이름 지정
 -v : 과정을 보여줌 (visual)
 -z : gzip으로 압축한 경우 (tar + gzip)
 -J : xz로 압축 (tar + xz)
 -j : bzip2로 압축 (tar + bzip2)

tar를 이용한 압축파일의 해제시 명령어(x)
# tar -zxvf 압축파일.tar.gz (gzip으로 압축된 파일을 해제할 때 사용) # tar -zxvf [file]
# tar -Jxvf 압축파일.tar.xz (xz로 압축된 파일을 해제할 때) #tar -Jxvf [file]
# tar -jxvf 압축파일.tar.bz2 (bzip2로 압축된 파일을 해제할 때) # tar -jxvf [file]

tar를 이용한 압축을 할 때 명령어(c)
$ tar -cvf 압축할파일명.tar /디렉토리 - 디렉토리 통째로 압축할 때
$ tar -cvfz 압축할파일명.tar.gz /디렉토리
$ tar -cvfj 압축할파일명.tar.bz2 /디렉토리
$ tar -cvfJ 압축할파일명.tar.xz /디렉토리


■rkhunter를 이용한 실습
rkhunter (Root Hunter) : rootkit을 잡아주는 프로그램 (rootkit: root 권한을 뺏는 해킹툴)
wget을 이용한 다운로드시 현재 작업하고 있는 디렉토리 안에 저장되는 것 같음.
(sourceforge에서 직접 다운로드도 가능, 초록색 버튼?)

압축을 해제하면 파일명의 디렉토리가 생성되고 해당 디렉토리로 들어간 후 # cd rk탭 하여 빠르게 찾기.
# ./인스톨파일을 실행하면 --help 메시지가 나오면서 다른 추가 명령어를 더 넣으라고 나오는데
# ./install.sh --install을 입력하여 인스톨 파일을 설치한다. 설치가 끝난 후
# rkhunter -c 명령어를 입력하여, rootkit 검사를 실행할 수 있다.
-대부분의 rootkit은 backdoor를 심어놓는다. (루트킷의 실행방법은 여러가지가 있지만 대부분의 루트킷은 백도어가 심어져있다.)
-backdoor를 심어두면 정보통신망법 위반 (MS의 backdoor를 알아낸 독일정부의 예시 참고, 아이폰과 안드로이드에도 있는데 기사를 찾아봐야함)

■파일찾기(locate명령어로도 찾을 수 있지만, find명령어가 더 정확하고 많이 찾아낸다?)
# find --help로 옵션들 확인해보기 (root 권한이 없으면 find 명령어가 제대로 동작하지 않음)
# find 명령어를 이용한 실습
# find / -name "찾을내용": /를 입력하여 최상위 디렉토리에서부터 찾아갈 수 있다. (최상위 디렉토리부터 찾아나가는게 모든 내용을 찾을 수 있다.)
# find / -user "username": 유저이름을 포함하는 유저를 찾는 명령어
# find /etc -perm "644": 권한이 644인 파일을 etc 디렉토리에서 찾는 명령어 (디렉토리를 지정해서 찾을 수도 있다)
# find /etc -perm "640" | wc -l (shift + \ wc -엘): 갯수가 많을 때 찾은 파일의 갯수를 나타내주는 명령어
# find /디렉토리/디렉토리 -size +10k -size -100k : 해당 디렉토리에서 사이즈가 100k이하 10k이상의 파일을 찾아주는 명령어
* | wc -l 명령어 자리에 | sort | sort -rn 으로 오름차순 내림차순 정렬을 할 수있다. (-n 오름차순, -rn 내림차순)
# find /디렉토리/디렉토리 -size 0k -exec ls -l {} \; : 디렉토리 내에서 사이즈가 0k인 파일을 찾아내는 명령어.
ㅁ-exec {} \; : 찾은 다음 실행하는 명령어, {} 앞에 명령어를 입력하여 삭제나 리스트를 보여주거나 하는 등의 명령을 실행할 수 있다.
exec: 실행 명령어, \; : 명령어의 끝을 나타내는 옵션(이 명령어의 끝이다. 라는 표시)

예시)
# find /home/sdr -size 0k -exec ls -l {} \; : sdr디렉토리 내에있는 size가 0k인 파일을 찾아서 리스트로 보여주고 끝냄
# find /home/sdr -name ".swp" -exec rm {} \; : sdr디렉토리 내에있는 이름이 "swp"인 파일을 찾아 삭제하고 끝냄

# locate passwd : passwd가 들어간 파일을 찾아냄
locate: can not stat () `/var/lib/mlocate/mlocate.db': No such file or directory 메시지가 뜨면 # updatebd를 입력하여 db를 업데이트 후 명령어 실행

ㅁfind 명령어가 locate 명령어보다 많이 쓰이는 이유?
-유연성: find는 다양한 검색조건과 옵션을 지원하여 정교한 검색을 할 수 있다.
-실시간 업데이트: find는 실시간으로 파일 시스템을 스캔하여 검색을 수행한다.
-성능: locate 명령어는 미리 생성된 파일 데이터베이스를 사용하여 검색하기 때문에 빠른 속도로 결과를 반환할 수 있습니다. 
하지만 데이터베이스가 업데이트되기 전까지는 최신 정보를 반영하지 못하며, 검색 범위가 제한적입니다. 
find 명령어는 실시간으로 파일 시스템을 스캔하기 때문에 최신 정보를 반영하며, 검색 범위도 더욱 넓을 수 있습니다.
하지만 상대적으로 find명령어의 검색속도가 느릴 수 있다.
ㅁMAC time 
mtime: 수정한 시간을 표시 
atime: 엑세스한 시간을 표시 - cat, less, vi로 접속했을 때
ctime: 생성한 시간을 표시

# find / -ctime -3 : 생성한지 3일 이내의 파일 찾기
# find / -mtime +10 : 수정한지 10일이 넘은 파일 찾기

203p~230p까지 내용이라고함.......................................................;


■시스템 설정
-CRON과 AT
ㅁcron: 반복되는 작업 또는 특정시점에 수행할 작업을 미리 등록해놓음.(관련파일은 /etc/crontab)
ex) 백업 등
나오는 순서: 분 시 일 월 요일 사용자 실행명령 (분 시 일 월 요일 순서 외워두기-중요, 시험에도 출제 된다고 함)
예시) 00 05 25 * * root cp -r /home /backup : 홈디렉토리의 백업을 root 권한으로 매월 25일 05시 00분에 백업을 한다
ㅁ* : 항상 수행

ㅁat
1회성 작업 예약
# at now+1 minutes
at> echo "plus">>/home/blackpink/new.txt
ctrl+d -> 명령 종료

직접 시간을 넣어 작업을 예약할 수도 있다.
# at 10:45 2020-12-18
at> touch /home/twice/whatislove
ctrl+d
-> 20년 12월 18일에 twice 디렉토리 안에 whatislove라는 파일을 만듦

11시 정각에 /home/twice/santa.txt 파일을 만들고 그 안에 Merry Christmas라고 입력되도록 설정

# at 11:00 2020-12-18
warning: commands will be executed using /bin/sh <-무시해도 된다고 함
at> echo "Merry Christmas">>/home/twice/santa.txt -> echo명령으로 santa.txt 파일이 자동생성되고 텍스트 입력됨
ctrl+d

*PC의 시간 설정이 안맞으면, 책 231p 참고

# rdate가 실행이 안되고, 업데이트도 없어서 안함..
# rdate -s time.bora.net
time.bora.net은 우리나라 시간 서비스를 해주는 서버와 동기화 ( -s : syncronization ) 라고 함

-VMware workstation을 이용한 시간 설정 방법
1. 전원 버튼의 설정
2. 최상위 메뉴로 가서 Settings에서 Details
3. Date & Times -> Unlock을 풀어준다(root 비밀번호를 입력, centos)
4. Date & Times를 클릭하여 수동으로 입력해준다.

-VMware workstation을 이용한 네트워크 IP 설정법
1. Settings의 Network
2. Wired의 톱니바퀴 클릭
3. IPv4탭을 눌러 입력한다.
4. Connect를 off를 한 후, On을 해야 적용이 된다.

-요일의 숫자표시 
0 : 일
1 : 월
2 : 화
3 : 수
4 : 목
5 : 금
6 : 토
7 : 일 (7도 일요일로 쓸 수 있으나 0이 있으니 잘 쓰지 않는다.)

예시) 자신의 생일 오전 09시에 congratulation이 동작하려면? (05/30 기준)
00 09 30 05 * sdr congratulation
예시) 산타 사용자가 12월 25일 0시에 선물을 주는 것을 설정
00 00 25 12 * santa give a gift

셸 스크립트: 명령을 자동으로 작성할 수 있게 하는 스크립트,파일 / 명령어 여러개를 수행하는 파일 (확장자는 .sh) 

$2$3의 설명 
date 실행시 나오는 문자열의 2번째 3번째
Tue May 30 11:28:06 KST 2023
$1    $2  $3 $4 $5 등등으로 설명할 수 있다.

233p~238p까지...

실습
# cd /etc/cron.monthy 이동 후, # touch myBackup.sh로 셸파일 생성 # chmod 755 myBackup.sh으로 권한변경
# vi myBackup.sh로 편집기로 연 후 i를 눌러 편집

#!/bin/sh ---------> shell script 선언
set $(date)
fname="backup-$2$3tar.xz"
tar cfJ /backup/$fname /home
편집이 끝나면 :wq로 저장하고 종료

백업할 내용은 crontab에 저장 : /etc/crontab
# less /etc/crontab
# vi /etc/crobtab : 작업 예약
크론 탭에서 vi로 편집모드로 들어간 후 i로 편집 실행
01 14 17 * * root run-parts /etc/cron.monthly로 분 시 일 월 권한등을 입력 :wq로 저장 후 종료
# systemctl restart crond로 설정
(cron서비스를 중지하고 재시작, cron작업이 예약된 시간에 실행되도록 보장하고 cron서비스에 대한 설정 변경을 적용하는데 사용)
-시스템에서 cron서비스를 재시작하는 명령어 (cron의 서비스인 crond가 종료되고 재실행된다.)
-systemctl(시스템컨트롤인듯):시스템 서비스를 관리하는 명령어 / restart: 재시작 / crond: cron 서비스의 이름(cron서비스를 관리하는데 사용되는 demon)

※tip: shift + pgup,dn으로 프롬프트의 내용 위아래로 스크롤 / shift + home,end로 프롬프트 내용 최상단 최하단으로 이동

ㅁ네트워크 설정과 명령어
NetBios name: 인터넷이 없어도 서로의 pc를 확인할 수 있는 이름?(네트워크 환경에서 사용되는 컴퓨터 또는 장치의 식별자)
로컬 네트워크에서 각 장치를 구별하고 통신을 가능하게 하는 중요한 역할 (네트워크 상에서 통신할 때 해당 장치를 고유하게 식별하기 위해 사용)
예를 들어, 파일 공유, 프린터 공유 등의 네트워크 서비스를 사용하기 위해 장치들은 서로의 NetBIOS 이름을 알아야 합니다.

ㅁDNS 서버 (Domain Name System)
•정방향 조회: 도메인 이름을 입력하면 IPv4/IPv6 주소를 알려주는 것: A, A6, AAAA등으로 알려줌
•역방향 조회: IPv4/IPv6 주소를 입력하면 도메인 이름을 알려주는 것: PTR
-사용자가 많은 곳에 DNS mirror서버가 많이 존재한다.
-DNS root server는 13개가 있지만, 더 늘리면 비효율적이라고 함.
도메인 검색을 위한 krnic.org와 후이즈 사이트 사용

# nslookup www.도메인.com: 도메인의 ip주소를 확인하는 명령어

ㅁIPv4
•8bit씩 4자리로 구성되어 있다. 32bit 주소체계 / 4개의 옥텟으로 구성 (4옥텟 = 4byte)
•8bit = 1byte, 1옥텟
-네트워크와 호스트 부분으로 나뉘어짐 (네트워크는 주어지는 부분, 호스트는 자유롭게 활용)
-클래스에 관한 설명 및 현재 클래스리스로 사용된다는 것에 관한 설명
-서브넷 마스크와 네트워크에 관한 설명
-IP주소와 서브넷 마스크는 짝지어 사용
-1의 부분은 네트워크, 0부분은 호스트로 사용 등등
•공인IP 주소: 유일한 공인(퍼블릭)IP 주소(유료), 라우팅을 통해 연결 가능 등등 설명
•사설 IP: 인터넷으로 나올 수 없지만, 누구나 사용 가능한 IP 주소 192.168 등등(NAT를 이용해 라우터에서 공인 IP로 변환 후 인터넷으로
나갈 수 있다) 등등
-브로드캐스트 전송 방식은 네트워크에 트래픽을 많이 발생 시키기 때문에, 최소화를 해야한다 등등
-net mask = subnet mask 같은말

238p~248p

ㅁ네트워크 설정
# nmtui :터미널 ui 입력 후 터미널 GUI를 통해 IPv4 주소를 수동으로 바꿨다. (화살표와 엔터를 이용)
# ifconfig : 현재 ip주소등을 확인할 수 있다 (if : interface의 약자)
수동 설정한 ip주소가 변하지 않은 것을 확인 후
# ifdown [기기명] : 기기명을 종료한다. (실습시에는 ens160으로 ip주소를 바꾼 기기? 같은 것)
# ifup [기기명] : 기기명을 가동한다. (재가동 후 ip설정이 수동설정했던 주소로 바뀐 것을 확인할 수 있었다.)

# ping : ICMP의 Echo Request를 보내고, Echo Reply가 되돌아 오게 된다.
->응답이 없으면 호스트가 다운되었거나, 중간에 막혔다는 뜻(방화벽 등으로 막힐 수 있다)

게이트웨이까지 ping을 해보는 실습
# ping 게이트웨이주소(실습때는 192.168.5.2)
메시지가 계속 나오는데 리눅스에서는 중간에 멈추려면 ctrl+c를 눌러 중단할 수 있다.
각 게이트웨이를 단계별로 입력하여 호스트가 어디서 끊긴지 유추할 수 있다.

*traceroute: 경로를 확인하는 명령어(설치가 되어있지 않다면 dnf install traceroute -y를 입력하여 설치) - ping을 묶어서 보내는 것???
•리눅스에서는 traceroute
•윈도우에서는 tracert 
- 윈도우에서 tracert google.com으로 추적을 했다.
*시간이 오래걸리고(응답시간이 지연 2ms->38ms), 숫자가 갑자기 커진 경로는 해저 케이블을 통해 이동했기 때문이다
14회에 걸쳐 이동했다고 하면 14번째는 목적지 서버기 때문에 라우터를 13번 이동했다고 이해하면 된다.

-GUI가 없는 환경에서의 IP 설정법
# cd /etc/sysconfig/network-scripts로 들어가서(tab키를 이용해 수월하게 들어갈 수 있으니 참고)
# ls -> 리스트 확인 후
# vi ifcfg-ens160(기기명): 기기 설정(i를 눌러 ip주소를 편집하고 저장하고 종료)
# ifdown ens160(기기명)후 
# ifup ens160(기기명)을 하여 종료 후 실행
# ifconfig ens160(기기명)을 하여 적용된 것을 확인

ㅁDNS 서버에 대한 설정
# cat /etc/resolv.conf

ㅁDNS 파일에 설정하는 방법 (우선순위가 DNS서버에게 물어보는 것보다 높음)
#cd /etc/hosts

www.daum.net 을 입력했는데, www.naver.com 으로 접속하도록 만들기
# nslookup www.naver.com (네이버의 IP주소 확인)
# vi /etc/hosts
i
125.209.222.141<tab>www.daum.net <- 스페이스가 아닌 tab을 한 후 도메인 주소를 입력한다.
ESC
:wq

주소에 www를 입력하는 것을 빼먹으면 웹에서 www가 자동으로 입력되기 때문에 (http는 80) 적용이 되지 않았다.
※정리하자면 /etc/hosts를 편집하고 ip주소와 도메인을 입력하고 저장하면 된다.
+ 검색창에 ip가 변경된 도메인을 검색(ex.daum, youtube)하고 클릭해도 변경된 ip로 접속한다.

248p ~ 253p

ㅁ파이프(|:shift+\) : 명령어를 두가지를 사용하고 싶을 때 사용
# ls -l /etc | more -> etc디렉토리에 있는 파일이 많으므로 페이지 단위로 보는 방법 (스페이스바 만 사용 가능)
# ls -l /etc | less -> pageup과 pagedown을 사용해서 지나간 페이지도 다시 보기 가능
# ls -l /etc | wc -l -> etc디렉토리에 있는 파일의 개수를 세어 보기
※파이프 입력 시, 스페이스 띄우는 것 명심(스페이스 파이프 스페이스 명령어) ex] | wc -l 

필터 : grep, tail, wc, sort, awk, sed 등등
- 로그의 양이 많아서 중요한 내용을 추출하기 위해서는 필터를 골고루 잘 사용해야 함
* 필터
- 텍스트 추출, 분석 등등
- 빅데이터 자연어(인간언어) 처리 등에 활용
- 로그 분석 활용
1) grep : 문자열이 일치하는 것을 찾아냄
# sysctl -a | grep icmp -> -a : 읽기, icmp가 포함된 sysctl의 내용을 추출
 0 : 적용 하지 않음
 1 : 적용 함
예시) net.ipv4.icmp_echo_ignore_all = 0
->ICMP로 Echo를 보내는 것(ping)을 무시(거부)하겠다? 0 (아니다) -> 응답하겠음

# sysctl -w net.ipv4.icmp_echo_ignore_all=1 
->ICMP Echo Request를 무시(ignore)하겠다? 1 (하겠다) -> 응답없음

# sysctl -w net.ipv4.icmp_echo_ignore_all=0
참고) sysctl : 시스템 설정 변경 (=systemctl)

# sysctl -a | grep tcp
# sysctl -a | grep udp
# sysctl -a | grep arp

2) wc (word count)
# wc -l : 라인수 계산해서 보여줌(자주 사용하는 것)
# wc -m : 알파벳 개수를 계산해서 보여줌
# wc -w : 단어 개수를 계산해서 보여줌

ㅁsort (정렬)
# sort -n : 오름차순 정렬
# sort -rn : 내림차순 정렬
# sort -u : 중복제거 (uniq)
예시)
# sysctl -a | grep icmp | sort | sort -n /home/sdr/config.txt
-> /home/sdr/config.txt 파일의 icmp가 들어간 문자열을 정렬하여 읽을 건데, 정렬 방식은 오름차순으로 하겠다. 
※sysctl : 시스템 컨트롤, -a : 모든 변수 표시(display all variables), sort : 정렬, | : 파이프, 명령어를 두 개 이상 쓰고 싶을 때
sort를 두 번 표시한 이유는 하나의 sort -n으로 입력해도 되기는 한데, 시스템 컨트롤로 정렬을 할 것이라는 명령어 후에 정렬 방법에 대해 설명해주는
것이다.(결과적으로는 하나의 sort -n이나 두 번의 | sort | sort -n이나 결과값은 같다.)

+네트워크가 이해가 잘 안되면 : "그림으로 공부하는 네트워크" 같은 그림이 포함된 네트워크 책 추천해주심.(ex. 그림으로 공부하는 TCP/IP) 




