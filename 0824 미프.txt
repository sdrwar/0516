■Terraform 이용 AWS EC2, VPC, AutoScaling, ELB, RDS, S3 구성 및 AWS EKS 구축
-기존 master를 master8로 수정 후 master9호스트로 spc -r /home/nana/terraform sdr@mater9:/home/sdr로 디렉토리 복사
-기존 쿠버네티스 구성요소 kubectl delete -f ~.yaml로 삭제
-AWS로 들어가 EKS 노드-클러스터-VPC등의 생성된 클러스터 구성요소들을 삭제
-centos9버전에서 파이썬 업데이트 및 cp libpython3.11.so.1.0 /usr/bin/ 명령어로 (파이썬3.11.so파일이 있는 디렉토리 내에서) 경로를 에러 메시지에 나온 곳으로
지정
-dnf reinstall libxml2 libxml2-devel -y 명령어로 libxml2 구성요소를 재설치, sudo dnf reinstall zlib zlib-devel -y명령어로 zlib의 구성요소들도 재설치
-오토케일링.tf까지는 같은 디렉토리 내에서 실습하였고, RDS와 S3는 디렉토리를 새로 만들어 하라고 하였다
-로드밸런서에서 인스턴스로의 접속, 외부에서 인스턴스 접속 확인
-오토스케일링.tf까지 생성한 후 terraform apply를 하여 오류없이 생성은 되었으나, elb dns로 접속을 하니 index.html의 내용이 보이지 않았고
인스턴스들을 웹브라우저로 접속을 해도 /var/www/html의 디렉토리를 찾을 수 없었다
-user-data.sh의 sudo 명령문을 dnf에서 yum으로 수정하니 웹브라우저에서 index.html파일 내용이 보였다
-RDS, S3 뿐 아니라 EKS도 새로운 디렉토리에서 작업을 해야 기존에 생성한 VPC, subnet의 값을 사용할 수 있다
-eks를 구성하기 위해 만든 eks디렉토리 내의 eks-vpcsubnet.tf 파일의 내용 중 
data "aws_vpc" "existing_vpc" {
  filter {
    name   = "tag:Name"
    values = ["terraform-vpc"] # 기존 VPC 이름으로 대체하세요        
  }
}

data "aws_subnet" "existing_private_subnet1" {
  filter {
    name   = "tag:Name"
    values = ["Public Subnet ap-southeast-1a"] # 기존 서브넷 이름으로 대체하세요
  }
}

data "aws_subnet" "existing_private_subnet2" {
  filter {
    name   = "tag:Name"
    values = ["Public Subnet ap-southeast-1a"] # 기존 서브넷 이름으로 대체하세요
  }
}
-기존에 테라폼으로 생성한 vpc및 서브넷을 이용하려면 data의 내용대로 aws의 태그의 value값을 values에 넣어야 한다 (VPC등의 ID가 아니라)
-ID로 입력하고 싶으면
data "aws_vpc" "existing_vpc" {
  id = "vpc-0e3a91a137f6a0f19"
}

data "aws_subnet" "existing_private_subnet1" {
  id = "subnet-0b74c54ce2b306091"
}

data "aws_subnet" "existing_private_subnet2" {
  id = "subnet-010848193f1432005"
}
의 내용으로 수정하여 줘야 한다
-IAM 권한도 기존의 IAM 정책으로 사용해야 해서 eks-cluster.tf파일의 내용 중 aws_iam_role의 내용을 아래와 같이 수정하였다

data "aws_iam_role" "existing_eks_cluster" {
  name = "EKS-cluster"
}
-vpc_config 값도 cluster파일에 추가해주었다
 resource "aws_eks_cluster" "this" {
  name     = "eks-cluster"
  role_arn = data.aws_iam_role.existing_eks_cluster.arn 밑에

  vpc_config {
    subnet_ids = ["subnet-0b74c54ce2b306091", "subnet-010848193f1432005"]
  }
-EKS 클러스터를 생성하는 시간은 대개 10분에서 20분정도 걸린다고 한다(테라폼에서 특별한 오류메시지가 없는 한 정상적인 현상이라고 함)
-fargate구성 시 프로필 이름을 eks-로 시작하는게 아닌 다른 이름으로 프로필을 정해야 한다(예약된 접두사 eks-로 시작하여 문제가 발생했다)
-로드밸런스와 오토스케일링 구성 시 EKS 구성에 필요한 프라이빗 서브넷이 생성이 되지 않아, auto-lb의 subnet-as.tf파일의 내용을 추가하였다
resource "aws_subnet" "private_1a" {
  vpc_id            = aws_vpc.terraformVPC.id
  cidr_block        = "10.0.10.0/24"
  availability_zone = "ap-southeast-1a"
  tags = {
    Name = "Private Subnet ap-southeast-1a"
  }
}

resource "aws_subnet" "private_1b" {
  vpc_id            = aws_vpc.terraformVPC.id
  cidr_block        = "10.0.11.0/24"
  availability_zone = "ap-southeast-1b"
  tags = {
    Name = "Private Subnet ap-southeast-1b"
  }
}

