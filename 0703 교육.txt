•VPC를 생성해야 네트워크를 구성 할 수 있다.
생성하거나 확인하거나 할 때, 항상 리전 확인 잘 하기.

•VPC의 기본VPC가 없어지거나 삭제했을 때는 작업에서 '기본 VPC생성'으로 기본VPC를 생성 할 수 있다.

■키페어 생성 내용 중 대칭키, 비대칭키에 관한 설명있었음(GPT go)

•대칭키(Symmetric Key):
대칭키는 암호화와 복호화에 같은 비밀키(secret key)를 사용하는 암호화 기법입니다. 
이 기법에서는 데이터를 암호화할 때 사용한 대칭키와 같은 비밀키를 사용하여 복호화를 수행합니다. 
대칭키는 블록 기반 암호화 기술에서 일반적으로 사용됩니다.

•비대칭키(Asymmetric Key):
비대칭키는 공개키(public key)와 비밀키(private key)의 쌍을 사용합니다. 공개키는 누구나 사용할 수 있으며, 비밀키는 개인적으로 보관합니다.
데이터를 암호화할 때는 공개키를 사용하고, 복호화할 때는 비밀키를 사용합니다. 
비대칭키는 공개키 암호화, 디지털 서명, 키 교환 등 다양한 용도로 사용됩니다.

•비대칭키 알고리즘, RSA방식 등등의 암호화의 방식에 대해 설명

•AWS의 Security group: Windows의 방화벽과 비슷한 개념의 제어 기능

•네트워크 ACL: ACL(Network Access Control List)은 서브넷(subnet) 수준의 가상 방화벽
 - VPC(Virtual Private Cloud)의 각 서브넷에 대해 인바운드(Inbound) 및 아웃바운드(Outbound) 트래픽에 대한 규칙을 설정하여 
트래픽을 허용하거나 거부할 수 있습니다.

[Q] VPC 기본값이 172.31.0.0/16이라면 서브넷은 172.31.0.0/20으로 하는 것이 맞는가? 아니면 다른 주소를 입력해야 하는가?

[A] AWS VPC(Virtual Private Cloud) 기본값이 172.31.0.0/16으로 주어졌다면, 
서브넷(subnet)은 모든 IP 범위가 포함된 이 CIDR 블록 내에서 설정할 수 있습니다. 
예를 들어, CIDR 주소 172.31.0.0/20으로 서브넷을 설정하면 이 상황에도 적합합니다. 
이 경우, 사용 가능한 IP 주소 범위는 172.31.0.0부터 172.31.15.255까지이며, 총 4096개의 IP 주소가 포함됩니다.
결정적인 정답은 없으며, 구축하고자 하는 웹 서버와 인프라에 맞는 적절한 CIDR 블록 범위와 서브넷을 설정하는 것이 중요합니다.
따라서, 172.31.0.0/20으로 서브넷을 설정해도 문제가 없습니다. 
물론, 여러 서브넷이 필요한 경우에는 더 작은 CIDR 블록(예: /24)을 사용하여 격리된 네트워크 환경을 생성하여 
전체 VPC 범위 내에서 다양한 서브넷을 구성할 수도 있습니다.

다단계 연결을 이용해 연결.. 아직 안해봄.. 교채 112p에 설명 있었음

ec2-user@~ 의 상세 설정을 보려면 ssh연결을 보면 된다(우분투는 유저 이름이 다르므로 우분투로 봐야한다)
강사님 PC처럼 서븐세 기본에 퍼블릭 활성화를 하려면 서브넷 들어가서 서브넷 편집->퍼블릭 IPv4 자동으로 체크하면 된다

•Ubuntu 20.04
apt update / apt install apache2 등의 명령어를 실습했다(디나이 뜨면 sudo 붙여서)
curl은 처음보는 명령어.. wget도 설치
Ubuntu의 패키지 관리 명령어는 dpkg(아마존 리눅스 설치했을 때의 rpm -ql 등의 명령어와 비슷한 기능)
-$dpkg -l 패키지명(설치 확인)
-$dpkg -L 패키지명(설치 파일 확인)

우분투 계열의 httpd = apache2

우분투,데비안 계열은 설치와 동시에 실행이 되어 systemctl status로 apache2를 확인하면 running 중인 것을 확인할 수 있다

centos를 설치하기 위해선 인스턴스 생성 시, 더 많은 os 보기해서 커뮤니티로 들어가서 centos를 선택하면 되는데 라이센스 비용을 내야 할 수도 있다

•Windows의 RDP 연결을 할 때에 SSH연결을 하지 않기 때문에 키가 필요 없을 것 같지만 키가 필요하다
원격 데스크톱 연결을 이용해 RDP 연결을 시도, 원격 컴퓨터의 이름은 RDP 클라이언트의 Public DNS 아래 있는 이름을 복사하여 넣고
유저는 어드민스트레이터(Administrator) 연결을 누르면 암호를 묻는데, RDP 클라이언트 밑 부분에 암호 가져오기해서 키를 업로드 하고 암호 해독하기 눌러
나온 암호를 복사하여 암호에 넣어주면 연결이 성공한다

그 후엔 너무 빨라서 따라가질 못했는데, 실무에서는 윈도우즈를 서버로 사용하는 경우가 거의 없을 것 같아, 중요하게 생각하지 않았다.

VPC 새로 생성 (VPC만, VPC등 차이 알기 만은 하나의 리전안에 VPC.. 뭐라고 했는데 기억안남, 등은 여러 개의 VPC를 하나의 리전 안에 배치? 뭐 그런 뉘앙스)

가용영역을 2개 만들어서 프라이빗2, 퍼블릭2로 만들었다 가용영역 1개당 프라이빗, 퍼블릭 1개 씩 있어야 하므로..(이해 안되면 안됨 이거 쉬운거임)
NATgateway도 1개 (1부터 AZ 선택)

가용영역 2개의 웹서버의 1의 영역에는 퍼블릭으로 서브넷 선택하고, (1번 서브넷) http 0.0.0.0/0으로 설정 아마존 리눅스를 설치했고
가용영역 2개의 웹서버의 2의 영역에는 퍼블릭으로 서브넷 선택하고, (2번 서브넷) 똑같이 http 입력해주고, 우분투를 설치했다.
네트워크 편집에서 기존의 VPC말고 가용영역 2개의 웹서버를 만들때 만들었던 VPC를 선택해주고 서브넷도 프라이빗이 아닌 퍼블릭 2번을 선택해줬다
처음에 실수로 프라이빗으로 설정했어서, 테스트 웹페이지가 뜨지 않았고 퍼블릭으로 설정해주니 잘 떴다(인터넷에 연결이 프라이빗으로는 되지않는 기본적인
개념을 잊고 실수를했었다)

DB서버 생성 시 퍼블릭 IP 자동할당은 비활성화 한다
DB의 CIDR은 범위가 좁을수록 좋다고 했는데 일단 실습에선 0.0.0.0/0으로 설정했었다

저번 시간에 실습 했던 web서버에서 db서버로 접속하기 위해 ssh로 웹서버를 접속하고,
(vi편집기로 윈도우즈의 키 내용을 열고 key폴더를 mkdir로 생성하고
키 값을 넣고 ssh ec2-user@db서버 아이피 -i 키의 경로를 통해 연결을 했다) 
DB서버가 제대로 작동 중인지 확인하기 위해 ssh 접속을 시도하려고 퍼블릭 IPv4 DNS를 보면 아무것도 없는 것을 확인할 수 있다.
DB서버의 사용자 데이터가 오타가 있거나 sudo가 빠진 경우 마리아디비가 설치가 되지 않기 때문에, db서버로 와서 sudo로 설치를 하고
시스템컨트롤 명령어로 start 하고 enable 하여 액티브 상태로 만들어 준 후
sudo mysql_secure_installation 입력하여 키의 설정 등을 한다(비밀번호, 알 수 없는 사용자 차단여부 등)

•$sudo mysql_secure_installation 으로 mysql(mariadb 보안 설정 설치)
•Enter current password for root (enter for none): 엔터
•Switch to unix_socket authentication [Y/n] n
•Change the root password? [Y/n] y (qwer1234! : 공동으로 바꾼 비밀번호)
•다시 입력
•Remove anonymous users? [Y/n] y
•Disallow root login remotely? [Y/n] n
•Remove test database and access to it? [Y/n] y
•Reload privilege tables now? [Y/n] y
등으로 설정 한다

mysql -u root -p 입력 후 패스워드 입력
show databases;로 데이터베이스 목록 확인 후 use mysql; 입력하여 데이터베이스 생성
select User,Host from User; 입력하여 호스트에 로컬호스트 접속을 허용?하게 해준다
구글에 mysql user create 입력하여 mysql에 유저 생성 예시를 보고 생성
create user 'admin'@'10.0.%'
idenrified by '비밀번호(qwer1234)';
그 후 flush privileges; 입력하여 반영해준다.

select User, Host from user;로 호스트에 주소가 잘 들어갔는지 확인

웹서버로 돌아가서 sudo yum install -y mariadb105로 설치 (마리아디비 클라이언트)
mysql -u admin -p -h(호스트) ip주소(디비서버의 프라이빗 IP DNS 이름(IPv4만 해당) 부분을 전체 복사 붙여넣기)
mysql -u admin -p -h ip-172-31-40-84.ap-northeast-3.compute.internal(또는 사설IP 주소) <- 예시

※디비 서버에 마리아디비 깔고, 웹서버에서 디비 서버로 접속 되는지 디비 서버에서 웹서버로 접속 되는지 확인하는 과정이었다.

가용영역 웹서버 2(우분투 설치한)에서 db서버 생성하고, mysql 설치하고 하는 등의 웹서버 1에서의 과정을 우분투에서 해본다
(나는 웹서버 2가 먹통이라 하지 못했다) 오사카는 c가 연결이 안된다...
