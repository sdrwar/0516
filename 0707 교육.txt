•ss -antp | grep :80의 뜻과 설정
- 현재 시스템에서 실행 중인 프로세스를 확인하고, 포트 80을 사용하는 프로세스를 필터링하기 위해 사용
- 명령어의 전체 의미는 "실행 중인 모든 TCP 네트워크 소켓을 표시하고, 그 중 포트 80을 사용하는 소켓 및 관련 프로세스 정보를 필터링하여 표시하십시오"입니다
- 이 명령어는 주로 현재 시스템에서 웹 서버가 작동 중인지 확인하는 데 사용

1. ss: Socket Statistics(소켓 통계)의 약자로, 현재 사용되고 있는 네트워크 소켓과 관련된 정보를 조회하는 데 사용되는 리눅스 명령어입니다.
2. -antp: ss 명령어에 전달되는 옵션입니다.
-a: 모든 연결된 소켓을 포함하여 사용자 정의 프로토콜을 사용하는 소켓도 표시합니다.
-n: 주소와 포트 번호를 숫자로 표시합니다.
-t: TCP 소켓만 표시합니다.
-p: 프로세스 정보를 표시합니다. 이렇게 하면 해당 소켓과 관련된 프로세스를 확인할 수 있습니다.
3. |: 이 연산자는 파이프라고 하며, 이전 명령의 출력을 다음 명령의 입력으로 전달하는데 사용됩니다.
4. grep :80: grep 명령어는 문자열 검색을 위해 사용되며, 여기서는 포트 80을 사용하는 결과를 필터링하기 위해 사용됩니다.

•ps -ef | grep httpd의 뜻과 설정
- 현재 시스템에서 실행 중인 프로세스 중 'httpd'(Apache 웹 서버 프로세스)와 관련된 것들을 필터링하여 출력하는 데 사용
- 이 명령어의 전체 의미는 "현재 실행 중인 모든 프로세스의 전체 형식 목록에서 'httpd'를 검색하고 관련 프로세스 정보를 출력하십시오"입니다
- 주로 현재 시스템에서 실행 중인 웹 서버(Apache 웹 서버) 프로세스와 관련된 정보를 확인하는 데 사용

1. ps: "Process Status(프로세스 상태)"의 약자로, 현재 시스템에서 실행 중인 프로세스 목록을 출력하는 리눅스 명령어입니다.
2. -ef: ps 명령어에 전달되는 옵션입니다.
-e: 모든 프로세스를 선택합니다.
-f: "full format(전체 형식)"으로; 프로세스의 목록과 자세한 정보를 출력합니다.
3. |: 이 연산자는 파이프라고 하며, 이전 명령의 출력을 다음 명령의 입력으로 전달하는데 사용됩니다.
4. grep httpd: grep 명령어는 문자열을 검색하는데 사용되며, 여기서는 'httpd'와 관련된 결과를 필터링하기 위해 사용됩니다.

0706실습 내용
VPC생성, 웹서버2, DB서버2 생성,  wordpress 다운로드 및 설치, wordpress를 /var/www/html으로 이동, DB서버로 연결 확인, RDS구성
스냅샷 이미지 생성, 생성한 이미지로 인스턴스 생성,  web1, web2를 로드밸런싱->대상 그룹으로 생성, ALB를 대상(타겟)그룹에 연결

ㅁ인스턴스 생성시 
#!/bin/bash
sudo dnf install httpd -y
sudo systemctl start httpd
sudo systemctl enable httpd
빈배쉬 앞에 공란 없어야 함 자꾸 설치가 안됐던게 공란 때문이었던 것 같음
인스턴스 중지하고 스냅샷 생성(작업->이미지및탭플릿->이미지생성

ㅁS3 버킷 생성
S3->버킷 생성->버킷 이름(고유해야함) 생성, 리전 자신의 리전으로 선택->버킷 만들기 후->자신의 버킷명을 클릭->폴더만들기, 업로드 등의 메뉴와
속성의 arn명도 확인하고 다른 탭도 확인을 했다..

ㅁIAM 설정
검색창에 IAM 입력 후 들어갔고, 액세스 관리 하나하나 설명했는데 안들음...
정책 들어가서 s3 검색 후 리드온리에 앞 + 버튼 눌러 함수가 어떤게 있는지 확인했다
책 보고 IAM만들었다 (역할 만들기에 역할 설정 등) 역할 만들면 사용자가 아닌 역할 메뉴에서 나온다
인스턴스에 보안->IAM역할 수정->내가 만든 역할을 선택해준다

ㅁS3와 같은 AWS 서비스를 사용할 때 IAM(Identity and Access Management)을 생성하는 이유는? 
- 보안 및 리소스 관리를 위해서
- IAM은 AWS 서비스에 대한 액세스를 보안하고 세밀하게 제어할 수 있는 관리 도구
1. 액세스 제어: IAM을 사용하면 S3와 같은 AWS 서비스에 대한 사용자 및 그룹 액세스 권한을 보다 세밀하게 제어
2. 신원 관리: AWS 계정 내에 다수의 사용자가 있을 경우, 각 사용자에게 개별 IAM 사용자를 생성하여 기본 계정 자격 증명 대신 사용하도록 설정
3. 보안 강화: IAM을 사용하면 MFA(Multi-Factor Authentication), 액세스 키 회전, 액세스 정책, AWS 계정의 비밀번호 정책 등 
추가적인 보안 방법을 도입할 수 있다
ㅁ만약 IAM을 생성하지 않으면 다음과 같은 결과를 초래할 수 있다
1. 보안 위험: 모든 사용자가 기본 계정 자격 증명을 사용하는 경우, 계정이나 리소스에 대한 접근 또는 변경을 제한할 수 없어 보안 위험이 증가
2. 권한 관리 어려움: IAM 사용자와 그룹을 생성하지 않으면 다수의 사용자가 서비스를 사용할 때 세부적인 권한 관리가 어려워짐
3. 제한된 신원 및 액세스 관리: 뚜렷한 사용자 신원과 신원별 권한이 없을 경우, 감사 및 모니터링이 어렵고 사용자 액세스에 대한 연장 기능을 구현할 수 없다

ㅁ도메인과 DNS
Route 53 서비스로 가서 원하는 도메인 주소를 찾아본다.
원하는 도메인을 1년만 결제 하고, Route 53에서 산 도메인을 눌러 무슨 값을 입력하는 메뉴에서 웹서버 퍼블릭 1,2,3의 주소 or 하나만 넣어서
해당 도메인으로 들어가면 만든 웹서버의 index.html파일의 내용이 나오는 것을 확인할 수 있다
cmd에서 nslookup 도메인주소를 입력하면 ip주소가 입력한 아이피들로 나오는 것을 확인 할 수 있다