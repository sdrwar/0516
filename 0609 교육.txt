어제 내용 복습과 중요도 재강조

-포트폴리오 쌓는 게 중요, 프로젝트등 중요도 강조-
-명렁어들을 반복숙달 연습을 해 명령어의 논리적 구조를 이해하는 것이 중요-
https://www.comcbt.com/ < 자격증 정보 사이트

DML 숙지하는 것은 반복해서 중요하다고 강조하심(CRUD) : 조작어 / DCL(제어어)도 숙지하는 게 중요

CRUD
┏Create-insert
┣Read-SELECT*
┣Update-Update
┗Delete-Delete

Key의 종류 중 Super Key는 복합키(전에 적어둠), 외래키는 기본키와 연계가 되는 키
나에 대한 정보가 있는 곳에서 외래키를 지정? 아무튼 1:N 에서의 N 방향에서 외래키가 된다.

프로그램마다 문자 표현 방식이 다르지만,(*UTF-8, ANCI등) 기본적으로 거의 모든 운영체제에서 UTF-8을 써야 글자가 깨지지 않고 입력이 된다.(지원이 된다)
URL에서 표현되는 한글과 메모장에서 표현되는 문자 표현 방식이 다르다.

select 구문
-Now = sysdate
:연습할때는 from 없이 실행

ㅁ조건문 사용 : case (거의 사용하지 않는다, 자주 바뀔 수 있어 DB에서 바꾸는게 아니라 파이썬이나 자바같은 곳 에서 바꾸는 게 좋다-마지막에 가는 곳에서)
ORM : SQL을 사용하지 않는 현재 추세에서 SQL을 대체하여 쓰는 방식?
복잡한 작업을 할 때에는 ORM에서는 하지 못해, SQL을 사용할 수 밖에 없다(ex, 위도/경도 구하는 명령문 같은)

ㅁ집계 함수(특수한 함수, 자주 다루게 되는 함수)를 이용한 검색, 
데이터가 하나로 함축되는 특징때문에 개개인의 특징은 살펴볼 수 없다

*count : 전체 개수 (사용가능 타입: 전체)
max : 최대값 (사용가능 타입: 전체)
min : 최소값 (사용가능 타입: 전체)
*sum : 합계 (사용가능 타입: 숫자)
avg : 평균 (사용가능 타입: 숫자)

avg나 sum같은 경우는 숫자와 관련된 함수이기 때문에 숫자가 들어간 항목만 가능
 * = 에스터리스크 (전체를 검색할 때, 컬럼보다 *를 더 많이 쓴다.)
컬럼으로 검색할 때는 NULL값은 포함하지 않는다
통계 함수를 사용할 때에는 NULL을 신경써야 한다

count를 사용할 때에는 컬럼보단 * 이나 1, A,B,C같은 것으로 넣는 것을 추천한다
Null을 비교할 땐 is null, != null 구문은 안된다

ㅁ그룹별 검색 : group by
select distinct 속성리스트 from 테이블리스트 where 조건 group by 속성 리스트(having 조건) group by 속성 리스트(asc | desc);
그룹을 형성할 때는 공통의 사항이 있는 단서로 검색해야 한다(이름이나 나이 등의 중복될 확률이 적은 것은 제외한다, 성별이나 등급으로 나눈다)
-나이로 그룹을 나눌 때는 10대 20대 처럼 앞자리를 그룹화 한다
-group by를 사용할 때는 select절에 *를 쓰지 않는 것이 보통이다(적립금, 나이 이런 데이터들이 전부 포함되기 때문에??)

*DML 조회(조회는 기본적으로 할 줄 알아야 하고) 중에서도 통계함수(도 기본) 그룹바이가 중요.
통계, 합치기를 할 줄 알아야 한다

데이터 조회 Select (sql은 위에서 부터 순서대로 작동한다, select는 예외-맨 마지막에 동작한다)
1. select
2. from
3. join (여러 번 쓰는 것이 가능) 테이블의 개수만큼 명시 해줄 수 있다
4. on
5. where
 ┎5-1. between, and (둘 다 같은 뜻)
 ┞5-2. in, or (둘 다 같은 뜻)
 ┖5-2. like
6. group by
 ┗6-1. having
7. order by
8. limit 시작번호, 조회개수
순서대로 입력해주어야 한다.

교통사고 통계 자료 heidi 넣을 때 경고 뜨는 것 (2개이상의 쿼리 어쩌고) 무시

테이블 이름 넣을 때 대소문자 주의..

한 건에 여러 사람이 DIE 했을 수 있기 때문에 sum 함수를 쓴다고 함, 그래서 count를 안쓰는건가..
4-3의 4번 문제에서 count(kind)를 넣을 수도 있지만, null 값이 들어가면 집계가 되지 않기 때문에 count(*)을 넣는 것이 좋다

where와 having의 차이점 (조건을 처리해주는 명령어라는 점은 같다)
where은 group by에 영향을 주지 않는다, from에서 가져온 데이터를 처리(from 구문을 적지 않고 select where 구문을 쓰면 모든 데이터를 처리하느라 고생한다)
where은 from에게 큰 영향을 준다고 함.
group by를 쓰면 눈에는 보이지 않지만 그룹이 지어진다, 그 다음 having 구문으로 그 그룹 안에서 다시 그룹조건을 나눈다
그룹을 나누기 전에는 웨어를 쓸 수 있지만, 그룹을 나눈 후에는 웨어를 쓸 수 없다.

오후
꼬렙/book/ 다운

외래키를 쓰는 이유?
불필요한 데이터를 안보여주기 위해서, 데이터를 깔끔하게 정렬하기 위해서
나랑 관련된(소유하고있건, 어쨌건) 데이터를 여러군데 뿌려두기 위해서

조인 실습 때 간단한 방법보다 복잡한 방법을 추천

join의 문제점:데이터가 테이블 양쪽에 다 연결 되어 있어야 출력 됨 (한 쪽에만 있으면 무시하고 나오지 않음, 전체적으로 그런건 아니고 한 쪽에만 있는
테이블만 해당 값을 무시함)

- Outer 조인
 ㆍ연결되는 컬럼 값이 없더라도 데이터를 검색해주는 조인
 ㆍ기준이 되는 테이블을 Outer, 반대쪽을 Inner 라고 표현
 ㆍLeft Outer 조인과 Right Outer 조인으로 구분
 (DB의 종류에 따라 Full Outer 조인도 사용)

DB에서의 도메인: 데이터의 형태 (숫자, 문자, 날짜 등)

sql의 함수와 문법: 함수는 괄호를 가지고, 문법은 가지지 않는다
ex. avg() / group by

join on에서 on 다음 문자는 기본키 = 외래키 (순서는 바꾸어도 상관없다)

연습할 땐 테이블을 새로 만들어서 실행 하는 것을 권장